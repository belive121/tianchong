// 自动填充文本框脚本 v1.0
(function(){
    // 配置默认填充文本
    const defaultText = "自动填充内容";
    
    // 检查是否已注入脚本
    if(window.autoFillInjected) return;
    window.autoFillInjected = true;
    
    // 创建浮动控制面板
    const panel = document.createElement('div');
    panel.style.cssText = `
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 9999;
        background: white;
        padding: 15px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.2);
        font-family: Arial, sans-serif;
        width: 250px;
    `;
    
    panel.innerHTML = `
        <h3 style="margin-top:0;color:#333;">文本框自动填充</h3>
        <textarea id="autoFillText" placeholder="输入要填充的文本" 
            style="width:100%;height:60px;margin:8px 0;padding:8px;"></textarea>
        <div style="display:flex;justify-content:space-between;">
            <button id="toggleFill" style="background:#4CAF50;color:white;border:none;padding:8px 15px;border-radius:4px;cursor:pointer;">
                启用自动填充
            </button>
            <button id="fillOnce" style="background:#2196F3;color:white;border:none;padding:8px 15px;border-radius:4px;cursor:pointer;">
                立即填充一次
            </button>
        </div>
        <p id="statusText" style="font-size:12px;color:#666;margin-top:10px;"></p>
        <button id="closePanel" style="position:absolute;top:5px;right:5px;background:none;border:none;font-size:16px;cursor:pointer;">×</button>
    `;
    
    document.body.appendChild(panel);
    
    // 从本地存储加载设置
    const savedText = localStorage.getItem('autoFillText');
    const textarea = panel.querySelector('#autoFillText');
    textarea.value = savedText || defaultText;
    
    // 状态变量
    let isActive = false;
    let observer = null;
    
    // 填充函数
    function fillEmptyInputs() {
        const textToFill = textarea.value.trim();
        if(!textToFill) return 0;
        
        const inputs = document.querySelectorAll(`
            input:not([type=button]):not([type=submit]):not([type=reset]):not([type=checkbox]):not([type=radio]):not([type=file]):not([type=hidden]), 
            textarea, 
            [contenteditable="true"]
        `);
        
        let filledCount = 0;
        
        inputs.forEach(input => {
            const value = input.value || input.textContent;
            if(!value.trim()) {
                try {
                    if(input.isContentEditable) {
                        input.textContent = textToFill;
                    } else {
                        input.value = textToFill;
                    }
                    
                    // 触发事件
                    input.dispatchEvent(new Event('input', { bubbles: true }));
                    input.dispatchEvent(new Event('change', { bubbles: true }));
                    
                    // 标记已填充
                    input.dataset.autoFilled = 'true';
                    input.style.backgroundColor = '#e6ffe6';
                    input.style.transition = 'background-color 0.3s';
                    
                    filledCount++;
                } catch(e) {
                    console.error('填充失败:', e);
                }
            }
        });
        
        return filledCount;
    }
    
    // 设置观察器
    function startObserving() {
        stopObserving(); // 先停止现有的观察器
        
        observer = new MutationObserver(() => {
            const count = fillEmptyInputs();
            if(count > 0) {
                updateStatus(`自动填充了 ${count} 个新文本框`);
            }
        });
        
        observer.observe(document.body, {
            childList: true,
            subtree: true,
            attributes: true,
            characterData: true
        });
    }
    
    // 停止观察
    function stopObserving() {
        if(observer) {
            observer.disconnect();
            observer = null;
        }
    }
    
    // 更新状态显示
    function updateStatus(message) {
        const statusEl = panel.querySelector('#statusText');
        statusEl.textContent = message;
        statusEl.style.color = '#333';
        
        setTimeout(() => {
            if(statusEl.textContent === message) {
                statusEl.style.color = '#666';
            }
        }, 3000);
    }
    
    // 按钮事件
    panel.querySelector('#toggleFill').addEventListener('click', function() {
        isActive = !isActive;
        
        if(isActive) {
            this.textContent = '禁用自动填充';
            this.style.background = '#f44336';
            startObserving();
            const count = fillEmptyInputs();
            updateStatus(`已启用，填充了 ${count} 个文本框`);
            
            // 保存文本
            localStorage.setItem('autoFillText', textarea.value);
        } else {
            this.textContent = '启用自动填充';
            this.style.background = '#4CAF50';
            stopObserving();
            updateStatus('自动填充已禁用');
        }
    });
    
    panel.querySelector('#fillOnce').addEventListener('click', function() {
        const count = fillEmptyInputs();
        updateStatus(`已填充 ${count} 个空白文本框`);
        localStorage.setItem('autoFillText', textarea.value);
    });
    
    panel.querySelector('#closePanel').addEventListener('click', function() {
        stopObserving();
        panel.remove();
        window.autoFillInjected = false;
    });
    
    // 初始状态
    updateStatus('准备好填充文本框');
})();
